####################################
## Factorial(N)
# 1 1 2 6 24 120 720 5040 40320 362880 3628800 39916800 479001600
##########################################################################
## Concept: Given a database with numbers in range [1, 50],
## calculate the factorial of the input number (num).
##########################################################################
## Idea: Iterate all the numbers (to avoid side channel attacks)
## and keep the result of the requested number.
##########################################################################

.pragma k=5 r=17 beta=8
.pragma PQ=239.251
.pragma io=ts incdir=../lib/

.mov _s1 fact
fact_loop:
    .mov21 ptr i                    # i = *ptr
    .inc ptr                        # ptr++
    .dec db_size

    .smul fact i fact               # fact *= i
    .seq i input x
    .smul x fact y

    .add y result                   # result += x * fact // either fact(N) or 0

.ifneq db_size ozero fact_loop      # while dbsize--
.out result
.outd result
.halt

# variables
. ptr:db_start
. i:~0 fact:~1
. x:~0 y:~0 result:~0
. ozero:0

# the factorial number to compute
input:;.include datax "input.sec"

# data
db_start:
.include datax "db.sec"
db_end:
db_size: (db_end - db_start)

.include "secure.lib"

# factorial(n):
# fact = 1
# for (i = 2; i <= n; i ++):
#   fact *= i;
# print fact
