####################################
## Factorial(N)
# 1 1 2 6 24 120 720 5040 40320 362880 3628800 39916800 479001600
##########################################################################
## Concept: Given a database with numbers in range [1, 50],
## calculate the factorial of the input number (num).
##########################################################################
## Idea: Iterate all the numbers (to avoid side channel attacks)
## and keep the result of the requested number.
##########################################################################

.pragma k=5 r=17 beta=8
.pragma PQ=239.251
.pragma io=ts incdir=../lib/

.mov _o1 fact
fact_loop:
    .mov21 ptr i                    # i = *ptr
    .inc ptr                        # ptr++
    .dec db_size

    .omul fact i fact               # fact *= i
    .mov ozero x
    .ifneq i num skip               # if i == num:
    .mov _o1 x                      #   x = 1
    skip:
    .omul x fact y                  # result += x * fact // either fact(N) or 0
    .add y result

.ifneq db_size ozero fact_loop      # while dbsize--
.out result
.halt

. num:5  # the factorial number to compute
# variables
. ptr:db_start
. i:0 fact:1
. x:0 y:0 result:0
. ozero:0

# data
db_start:
.include "db.opn"
db_end:
db_size: (db_end - db_start)

.include "secure.lib"

# factorial(n):
# fact = 1
# for (i = 2; i <= n; i ++):
#   fact *= i;
# print fact
